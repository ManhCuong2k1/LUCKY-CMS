(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{1009:function(t,e,r){"use strict";r.r(e);r(17),r(13),r(15),r(19),r(14),r(20);var n=r(6),c=r(0),o=(r(7),r(51)),l=r(881),m=r(707);function f(object,t){var e=Object.keys(object);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(object);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(object,t).enumerable}))),e.push.apply(e,r)}return e}var d={layout:"admin",components:{CityForm:l.a,PageHeader:m.a},asyncData:function(t){return Object(c.a)(regeneratorRuntime.mark((function e(){var r,n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.params,n=t.store,e.next=3,n.dispatch("admin/city/show",r.id);case 3:case"end":return e.stop()}}),e)})))()},data:function(){return{activeName:""}},computed:function(t){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?f(Object(source),!0).forEach((function(e){Object(n.a)(t,e,source[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(source)):f(Object(source)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(source,e))}))}return t}({},Object(o.d)("admin/city",["cityDetail"])),methods:{updateTag:function(form){var t=this;return Object(c.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t.$store.dispatch("admin/city/update",{id:t.cityDetail.id,data:form});case 3:t.$router.push("/admin/city"),e.next=9;break;case 6:e.prev=6,e.t0=e.catch(0),t.$message({message:"Sửa không thành công",type:"error"});case 9:case"end":return e.stop()}}),e,null,[[0,6]])})))()},active:function(t){this.activeName=t}}},h=r(12),component=Object(h.a)(d,(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",[r("PageHeader",{attrs:{title:t.cityDetail.name},on:{changeEdit:t.active}}),t._v(" "),r("CityForm",{attrs:{"city-data":t.cityDetail},on:{submitForm:t.updateTag}})],1)}),[],!1,null,null,null);e.default=component.exports},706:function(t,e,r){var n=r(259);t.exports=function(t){return n(t,5)}},707:function(t,e,r){"use strict";var n={props:{title:{type:String,require:!0},activeName:{type:String,require:!0}},methods:{goBack:function(){this.$router.go(-1)}}},c=r(12),component=Object(c.a)(n,(function(){var t=this,e=t.$createElement;return(t._self._c||e)("el-page-header",{staticClass:"mb-5",attrs:{content:t.title},on:{back:t.goBack}})}),[],!1,null,null,null);e.a=component.exports},881:function(t,e,r){"use strict";var n=r(0),c=(r(7),r(706)),o=r.n(c),l={name:"",code:""},m={props:{cityData:{type:Object,required:!1}},data:function(){var t=this.cityData?o()(this.cityData):o()(l);return{loading:!1,cityForm:t,optioncity:null===t.parent?[]:[t.parent],rules:{name:[{required:!0,message:"Vui lòng nhập tên thành phố",trigger:"blur"},{min:1,max:300,message:"Độ dài chuỗi từ 10 tới 300",trigger:"blur"}],code:{required:!0,message:"Vui lòng nhập mã thành phố",trigger:"blur"}}}},watch:{cityData:function(){this.cityForm=this.cityData?o()(this.cityData):o()(l)}},methods:{submitForm:function(t){var e=this;this.$refs[t].validate(function(){var t=Object(n.a)(regeneratorRuntime.mark((function t(r){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!r){t.next=4;break}e.$emit("finishForm",e.cityForm),t.next=5;break;case 4:return t.abrupt("return",!1);case 5:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}())},resetForm:function(t){this.$refs[t].resetFields()}}},f=r(12),component=Object(f.a)(m,(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",[r("el-form",{ref:"cityForm",staticClass:"w-full",attrs:{model:t.cityForm,"label-width":"120px",rules:t.rules}},[r("el-form-item",{attrs:{label:"Tên",prop:"name"}},[r("el-input",{attrs:{placeholder:"Tên"},model:{value:t.cityForm.name,callback:function(e){t.$set(t.cityForm,"name",e)},expression:"cityForm.name"}})],1),t._v(" "),r("el-form-item",{attrs:{label:"Mã",prop:"code"}},[r("el-input",{attrs:{placeholder:"Nhập mã thành phố"},model:{value:t.cityForm.code,callback:function(e){t.$set(t.cityForm,"code",e)},expression:"cityForm.code"}})],1),t._v(" "),r("el-form-item",[r("el-button",{attrs:{type:"primary"},on:{click:function(e){return t.submitForm("cityForm")}}},[t._v("\n                Lưu\n            ")]),t._v(" "),r("el-button",{on:{click:function(e){return t.resetForm("cityForm")}}},[t._v("\n                Làm mới\n            ")])],1)],1)],1)}),[],!1,null,null,null);e.a=component.exports}}]);